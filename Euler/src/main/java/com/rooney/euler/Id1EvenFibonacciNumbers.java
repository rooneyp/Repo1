package com.rooney.euler;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 * @author prooney
 *
 */
public class Id1EvenFibonacciNumbers {

	/**
	 * ans is 4613732
	 */
	public static void main(String[] args) {
		int maxTermSize = 90;
//		System.out.println(attempt1(maxTermSize));
		System.out.println(attempt2(maxTermSize));
		
	}

	private static long attempt2(int maxTermSize) {
		int a = 0; 
		int b = 1;
		int tmpB; 
		
		long sumOfEven = 0;
		
		while(a+b < maxTermSize) {
			tmpB = a+b;
			a=b;
			b=tmpB;
			
			if(b % 2 ==0) {
				sumOfEven += b;
			} 
		}
		return sumOfEven;
	}	
	
	private static long attempt1(int maxTermSize) {
		int a = 0; 
		int b = 1;
		int tmpB; 
		
		long sumOfEven = 0;
		
		while(a+b < maxTermSize) {
			tmpB = a+b;
			a=b;
			b=tmpB;
			
			if(b % 2 ==0) {
				sumOfEven += b;
			} 
		}
		return sumOfEven;
	}

}
